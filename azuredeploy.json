{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourcePrefix": {
            "type": "string",
            "defaultValue": "qna",
            "metadata": {
                "description": "Prefix for all resources created by this template"
            }
        },
        "searchServiceSku": {
            "type": "string",
            "defaultValue": "basic",
            "allowedValues": [
                "free",
                "basic",
                "standard",
                "standard2",
                "standard3",
                "storage_optimized_l1",
                "storage_optimized_l2"
            ],
            "metadata": {
                "description": "The SKU of the search service you want to create"
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS",
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GZRS",
                "Standard_RAGZRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "serverFarmsSku": {
            "defaultValue": "S2",
            "allowedValues": [
                "D1",
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1",
                "P2",
                "P3",
                "P4"
            ],
            "type": "String",
            "metadata": {
                "description": "The SKU of the app service hosting plan"
            }
        }
    },
    "variables": {
        "repoURL": "https://github.com/jennifermarsman/cognitive-search-qna-solution",
        "repoDirectory": "jennifermarsman/cognitive-search-qna-solution/",
        "branch": "main",
        "reactProject": "SearchUI",
        "functionProject": "CustomSkillForDataIngestion\\QnAIntegrationCustomSkill\\QnAIntegrationCustomSkill.csproj",
        "qnaServiceName": "[concat(parameters('resourcePrefix'), '-qna-', uniqueString(resourceGroup().id, deployment().name))]",
        "searchServiceName": "[concat(parameters('resourcePrefix'), '-search-service-', uniqueString(resourceGroup().id, deployment().name))]",
        "hostingPlanName": "[concat(parameters('resourcePrefix'), '-plan-', uniqueString(resourceGroup().id, deployment().name))]",
        "qnaAppServiceName": "[concat(parameters('resourcePrefix'), '-site-', uniqueString(resourceGroup().id, deployment().name))]",
        "storageAccountName": "[concat(parameters('resourcePrefix'), 'storage', uniqueString(resourceGroup().id, deployment().name))]",
        "functionAppName": "[concat(parameters('resourcePrefix'), '-function-app-', uniqueString(resourceGroup().id, deployment().name))]",
        "cognitiveServicesAllInOneName": "[concat(parameters('resourcePrefix'), '-cogsvc-allinone-', uniqueString(resourceGroup().id, deployment().name))]",
        "appInsightsName": "[concat(parameters('resourcePrefix'), '-insights-', uniqueString(resourceGroup().id, deployment().name))]",
        "siteName": "[concat(parameters('resourcePrefix'), '-ui-', uniqueString(resourceGroup().id, deployment().name))]"
    },
    "resources": [
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2017-04-18",
            "name": "[variables('qnaServiceName')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/Sites', variables('qnaAppServiceName'))]",
                "[resourceId('Microsoft.Search/searchServices', variables('searchServiceName'))]"
            ],
            "sku": {
                "name": "S0"
            },
            "kind": "QnAMaker",
            "properties": {
                "apiProperties": {
                    "qnaRuntimeEndpoint": "[concat('https://',reference(resourceId('Microsoft.Web/sites', variables('qnaAppServiceName'))).hostNames[0])]"
                },
                "customSubDomainName": "[variables('qnaServiceName')]"
            }
        },
        {
            "type": "Microsoft.Search/searchServices",
            "apiVersion": "2020-08-01",
            "name": "[variables('searchServiceName')]",
            "location": "[resourceGroup().location]",
            "tags": {},
            "sku": {
                "name": "[parameters('searchServiceSku')]"
            },
            "properties": {
                "replicaCount": 1,
                "partitionCount": 1
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2016-09-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "Name": "[parameters('serverFarmsSku')]"
            },
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "workerSizeId": "0",
                "reserved": false,
                "numberOfWorkers": "1",
                "hostingEnvironment": ""
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02-preview",
            "name": "[variables('appInsightsName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('appInsightsName')))]": "Resource"
            },
            "properties": {
                "ApplicationId": "[variables('appInsightsName')]",
                "Request_Source": "IbizaWebAppExtensionCreate"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2019-08-01",
            "name": "[variables('qnaAppServiceName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Search/searchServices/', variables('searchServiceName'))]",
                "[resourceId('microsoft.insights/components',variables('appInsightsName'))]"
            ],
            "tags": {
                "[concat('hidden-related:', '/subscriptions/', subscription().SubscriptionId,'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "empty"
            },
            "properties": {
                "enabled": true,
                "siteConfig": {
                    "cors": {
                        "allowedOrigins": [
                            "*"
                        ]
                    },
                    "alwaysOn": true,
                    "appSettings": [
                        {
                            "name": "AzureSearchName",
                            "value": "[variables('searchServiceName')]"
                        },
                        {
                            "name": "AzureSearchAdminKey",
                            "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices', variables('searchServiceName')), '2020-08-01').primaryKey]"
                        },
                        {
                            "name": "PrimaryEndpointKey",
                            "value": "[concat(variables('qnaAppServiceName'), '-PrimaryEndpointKey')]"
                        },
                        {
                            "name": "SecondaryEndpointKey",
                            "value": "[concat(variables('qnaAppServiceName'), '-SecondaryEndpointKey')]"
                        },
                        {
                            "name": "DefaultAnswer",
                            "value": "No good match found in KB."
                        },
                        {
                            "name": "QNAMAKER_EXTENSION_VERSION",
                            "value": "latest"
                        },
                        {
                            "name": "UserAppInsightsKey",
                            "value": "[reference(resourceId('microsoft.insights/components', variables('appInsightsName')), '2020-02-02-preview').InstrumentationKey]"
                        }
                    ]
                },
                "name": "[variables('qnaAppServiceName')]",
                "serverFarmId": "[concat('/subscriptions/', subscription().SubscriptionId,'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
                "hostingEnvironment": ""
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2019-06-01",
            "location": "[resourceGroup().location]",
            "kind": "Storage",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            }
        },
        {
            "apiVersion": "2019-08-01",
            "name": "[variables('functionAppName')]",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Search/searchServices', variables('searchServiceName'))]",
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('qnaServiceName'))]",
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('cognitiveServicesAllInOneName'))]",
                "[resourceId('microsoft.insights/components',variables('appInsightsName'))]"
            ],
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[variables('functionAppName')]",
                "kind": "functionapp",
                "httpsOnly": true,
                "serverFarmId": "[concat('/subscriptions/', subscription().SubscriptionId,'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
                "siteConfig": {
                    "enabled": true,
                    "alwaysOn": true,
                    "cors": {
                        "allowedOrigins": [
                            "*"
                        ]
                    },
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value, ';')]"
                        },
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value, ';')]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
                            "value": true
                        },
                        {
                            "name": "PROJECT",
                            "value": "[variables('functionProject')]"
                        },
                        {
                            "name": "SearchServiceName",
                            "value": "[variables('searchServiceName')]"
                        },
                        {
                            "name": "SearchServiceApiKey",
                            "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices', variables('searchServiceName')), '2020-08-01').primaryKey]"
                        },
                        {
                            "name": "QnAServiceName",
                            "value": "[variables('qnaServiceName')]"
                        },
                        {
                            "name": "QnAAuthoringKey",
                            "value": "[listkeys(resourceId('Microsoft.CognitiveServices/accounts', variables('qnaServiceName')), '2017-04-18').key1]"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('microsoft.insights/components', variables('appInsightsName')), '2020-02-02-preview').InstrumentationKey]"
                        },
                        {
                            "name": "CogServicesKey",
                            "value": "[listkeys(resourceId('Microsoft.CognitiveServices/accounts', variables('cognitiveServicesAllInOneName')), '2017-04-18').key1]"
                        },
                        {
                            "name": "StorageAccountName",
                            "value": "[variables('storageAccountName')]"
                        },
                        {
                            "name": "StorageAccountKey",
                            "value": "[listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value]"
                        },
                        {
                            "name": "QnAMakerEndpoint",
                            "value": "[concat('https://', variables('qnaAppServiceName'), '.azurewebsites.net')]"
                        },
                        {
                            "name": "SITE_FLAVOR",
                            "value": "dotnetfunctions"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "sourcecontrols",
                    "apiVersion": "2019-08-01",
                    "name": "web",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites',variables('functionAppName'))]"
                    ],
                    "properties": {
                        "RepoUrl": "[variables('repoURL')]",
                        "branch": "[variables('branch')]",
                        "project": "[variables('functionProject')]",
                        "IsManualIntegration": true
                    }
                }
            ]
        },
        {
            "name": "[variables('cognitiveServicesAllInOneName')]",
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2017-04-18",
            "sku": {
                "name": "S0"
            },
            "kind": "CognitiveServices",
            "location": "[resourceGroup().location]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "name": "initaccelerator",
            "dependsOn": [
                "[resourceId('Microsoft.Web/Sites/sourcecontrols', variables('functionAppName'), 'web')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat('https://raw.githubusercontent.com/', variables('repoDirectory'), variables('branch'),'/linkedazuredeploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "functionAppName": {
                        "value": "[variables('functionAppName')]"
                    },
                    "siteName": {
                        "value": "[variables('siteName')]"
                    },
                    "hostingPlanName": {
                        "value": "[variables('hostingPlanName')]"
                    },
                    "reactProject": {
                        "value": "[variables('reactProject')]"
                    },
                    "repoURL": {
                        "value": "[variables('repoURL')]"
                    },
                    "branch": {
                        "value": "[variables('branch')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "HTTP Trigger": {
            "type": "string",
            "value": "[reference('initaccelerator').outputs.URL.value]"
        }
    }
}